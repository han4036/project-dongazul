<?xml version="1.0" encoding="UTF-8"?>


<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
		
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<websocket:handlers>
	
		<websocket:mapping handler="echoHandler" path="/echo" />
		<websocket:handshake-interceptors>
	         <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
	      </websocket:handshake-interceptors>
		<websocket:sockjs />
	</websocket:handlers>
    
	
	<context:component-scan base-package="com.dongazul.myapp.exception" />
	<context:component-scan base-package="com.dongazul.myapp.controller" />
	<context:component-scan base-package="com.dongazul.myapp.service" />
	<context:component-scan base-package="com.dongazul.myapp.domain" />
	<context:component-scan base-package="com.dongazul.myapp.persistence"/>
	
	<context:component-scan base-package="com.dongazul.myapp.interceptor"/>
	
	<!--  <beans:bean 
		id="loginInterceptor" 
		class="com.dongazul.myapp.interceptor.LoginInterceptor"/>
		
	<beans:bean 
		id="authInterceptor" 
		class="com.dongazul.myapp.interceptor.AuthInterceptor"/>-->
		
	
	<beans:bean class="java.lang.String" id="uploadPath">
		<beans:constructor-arg value="C:\opt\eclipse\workspace\JEE\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\dongazul\resources" />
	</beans:bean>
	
	<!-- 일반 파일 업로드 경로 -->
	<mvc:resources mapping="/imgUpload/**" location="/resources/imgUpload/" />
	
	<beans:bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
	 	<beans:property name="maxUploadSize" value="10485760"/>
	</beans:bean>
	
	
	<mvc:interceptors>

		<mvc:interceptor>
			<mvc:mapping path="/login/signInPost" />

			<beans:ref bean="loginInterceptor" />
		</mvc:interceptor>

	
		<mvc:interceptor>
			<mvc:mapping path="/matching/*" />
			<mvc:mapping path="/chat/*" />
			<mvc:mapping path="/profile/*" />
			
			<mvc:mapping path="/member/changePw" />
			<mvc:mapping path="/member/dropOut" />
			
			<beans:ref bean="authInterceptor" />
		</mvc:interceptor> 

	</mvc:interceptors>
	
	<mvc:view-controller 
			path="/" 
			view-name="login/signIn" 
			status-code="200" />
	
</beans:beans>